	//Portal Locations
	//The way this works is the B value is the next stage
	//The G value is for the map the door is located on

//Tutorial Portals
	if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 7)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Hub Portals
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 1 && Pixels[pos * 3 + 2] == 0)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 1);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 2 && Pixels[pos * 3 + 2] == 0)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 2);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 3 && Pixels[pos * 3 + 2] == 0)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 3);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 4 && Pixels[pos * 3 + 2] == 0)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 4);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 5 && Pixels[pos * 3 + 2] == 0)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 5);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 6 && Pixels[pos * 3 + 2] == 0)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 6);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 7 && Pixels[pos * 3 + 2] == 0)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 6);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Level 1 Portals (Volcano)
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 1)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 11 && Pixels[pos * 3 + 2] == 1)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 11);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 11)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Level 2 Portals (Autumn)
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 2)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 12 && Pixels[pos * 3 + 2] == 2)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 12);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 12)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Level 3 (Desert)
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 3)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 13 && Pixels[pos * 3 + 2] == 3)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 13);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 13)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Level 4 (Field)
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 4)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 14 && Pixels[pos * 3 + 2] == 4)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 14);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 14)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Level 5 (Tech)
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 5)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 15 && Pixels[pos * 3 + 2] == 5)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 15);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 15)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Level 6 (Castle)
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 6)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 16 && Pixels[pos * 3 + 2] == 6)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 16);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 16)
		{
		tileManager->CreatePortal(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 17, 0, true, 0);
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);
		}

//Level 1 (Volcano)
/*R1*/	else if (Pixels[pos * 3 + 0] == 237 && Pixels[pos * 3 + 1] == 28 && Pixels[pos * 3 + 2] == 36)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 170, true);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 127 && Pixels[pos * 3 + 2] == 39)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 170, true);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 242 && Pixels[pos * 3 + 2] == 0)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 170, true);
	else if (Pixels[pos * 3 + 0] == 34 && Pixels[pos * 3 + 1] == 177 && Pixels[pos * 3 + 2] == 76)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 170, true);
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 162 && Pixels[pos * 3 + 2] == 232)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 170, true);

/*R2*/	else if (Pixels[pos * 3 + 0] == 63 && Pixels[pos * 3 + 1] == 72 && Pixels[pos * 3 + 2] == 204)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 153, true);
	else if (Pixels[pos * 3 + 0] == 163 && Pixels[pos * 3 + 1] == 73 && Pixels[pos * 3 + 2] == 164)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 153, true);
	else if (Pixels[pos * 3 + 0] == 200 && Pixels[pos * 3 + 1] == 191 && Pixels[pos * 3 + 2] == 231)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 153, true);
	else if (Pixels[pos * 3 + 0] == 112 && Pixels[pos * 3 + 1] == 146 && Pixels[pos * 3 + 2] == 190)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 153, false);
	else if (Pixels[pos * 3 + 0] == 153 && Pixels[pos * 3 + 1] == 217 && Pixels[pos * 3 + 2] == 234)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 153, true);

/*R3*/ if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 174 && Pixels[pos * 3 + 2] == 201)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 136, false);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 201 && Pixels[pos * 3 + 2] == 14)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 136, false);
	else if (Pixels[pos * 3 + 0] == 239 && Pixels[pos * 3 + 1] == 228 && Pixels[pos * 3 + 2] == 176)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 136, true);
	else if (Pixels[pos * 3 + 0] == 185 && Pixels[pos * 3 + 1] == 122 && Pixels[pos * 3 + 2] == 87)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 136, true);
	else if (Pixels[pos * 3 + 0] == 195 && Pixels[pos * 3 + 1] == 195 && Pixels[pos * 3 + 2] == 195)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 136, true);

/*lava1*/  else if (Pixels[pos * 3 + 0] == 90 && Pixels[pos * 3 + 1] == 90 && Pixels[pos * 3 + 2] == 90)
	tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 85, false);
	else if (Pixels[pos * 3 + 0] == 91 && Pixels[pos * 3 + 1] == 91 && Pixels[pos * 3 + 2] == 91)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 220, 85, false);
	else if (Pixels[pos * 3 + 0] == 92 && Pixels[pos * 3 + 1] == 92 && Pixels[pos * 3 + 2] == 92)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 85, false);
	else if (Pixels[pos * 3 + 0] == 93 && Pixels[pos * 3 + 1] == 93 && Pixels[pos * 3 + 2] == 93)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 254, 85, false);
	else if (Pixels[pos * 3 + 0] == 94 && Pixels[pos * 3 + 1] == 94 && Pixels[pos * 3 + 2] == 94)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 271, 85, false);

/*lava2*/  else if (Pixels[pos * 3 + 0] == 80 && Pixels[pos * 3 + 1] == 80 && Pixels[pos * 3 + 2] == 80)
	tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 68, false);
	else if (Pixels[pos * 3 + 0] == 81 && Pixels[pos * 3 + 1] == 81 && Pixels[pos * 3 + 2] == 81)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 220, 68, true);
	else if (Pixels[pos * 3 + 0] == 82 && Pixels[pos * 3 + 1] == 82 && Pixels[pos * 3 + 2] == 82)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 68, true);
	else if (Pixels[pos * 3 + 0] == 83 && Pixels[pos * 3 + 1] == 83 && Pixels[pos * 3 + 2] == 83)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 254, 68, true);
	else if (Pixels[pos * 3 + 0] == 84 && Pixels[pos * 3 + 1] == 84 && Pixels[pos * 3 + 2] == 84)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 271, 68, false);

/*lava3*/  else if (Pixels[pos * 3 + 0] == 70 && Pixels[pos * 3 + 1] == 70 && Pixels[pos * 3 + 2] == 70)
	tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 51, false);
	else if (Pixels[pos * 3 + 0] == 71 && Pixels[pos * 3 + 1] == 71 && Pixels[pos * 3 + 2] == 71)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 220, 51, false);
	else if (Pixels[pos * 3 + 0] == 72 && Pixels[pos * 3 + 1] == 72 && Pixels[pos * 3 + 2] == 72)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 51, false);
	else if (Pixels[pos * 3 + 0] == 73 && Pixels[pos * 3 + 1] == 73 && Pixels[pos * 3 + 2] == 73)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 254, 51, false);
	else if (Pixels[pos * 3 + 0] == 74 && Pixels[pos * 3 + 1] == 74 && Pixels[pos * 3 + 2] == 74)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 271, 51, false);

/*innercorners walls*/  else if (Pixels[pos * 3 + 0] == 199 && Pixels[pos * 3 + 1] == 199 && Pixels[pos * 3 + 2] == 199)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 102, true);
	else if (Pixels[pos * 3 + 0] == 198 && Pixels[pos * 3 + 1] == 198 && Pixels[pos * 3 + 2] == 198)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 102, true);

/*innercorners lava*/	else if (Pixels[pos * 3 + 0] == 225 && Pixels[pos * 3 + 1] == 225 && Pixels[pos * 3 + 2] == 225)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 85, false);
	else if (Pixels[pos * 3 + 0] == 226 && Pixels[pos * 3 + 1] == 226 && Pixels[pos * 3 + 2] == 226)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 85, false);
	else if (Pixels[pos * 3 + 0] == 227 && Pixels[pos * 3 + 1] == 227 && Pixels[pos * 3 + 2] == 227)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 102, false);
	else if (Pixels[pos * 3 + 0] == 228 && Pixels[pos * 3 + 1] == 228 && Pixels[pos * 3 + 2] == 228)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 85, false);



//Level 2 (Autumn)
	else if (Pixels[pos * 3 + 0] == 251 && Pixels[pos * 3 + 1] == 139 && Pixels[pos * 3 + 2] == 136)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 85, true);
	else if (Pixels[pos * 3 + 0] == 239 && Pixels[pos * 3 + 1] == 171 && Pixels[pos * 3 + 2] == 148)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 85, false);

	else if (Pixels[pos * 3 + 0] == 104 && Pixels[pos * 3 + 1] == 107 && Pixels[pos * 3 + 2] == 50)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 68, true);
	else if (Pixels[pos * 3 + 0] == 138 && Pixels[pos * 3 + 1] == 145 && Pixels[pos * 3 + 2] == 13)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 68, true);
	else if (Pixels[pos * 3 + 0] == 107 && Pixels[pos * 3 + 1] == 22 && Pixels[pos * 3 + 2] == 135)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 68, true);
	else if (Pixels[pos * 3 + 0] == 217 && Pixels[pos * 3 + 1] == 166 && Pixels[pos * 3 + 2] == 221)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 68, true);
	else if (Pixels[pos * 3 + 0] == 156 && Pixels[pos * 3 + 1] == 233 && Pixels[pos * 3 + 2] == 154)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 68, true);

	else if (Pixels[pos * 3 + 0] == 139 && Pixels[pos * 3 + 1] == 18 && Pixels[pos * 3 + 2] == 136)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 51, true);
	else if (Pixels[pos * 3 + 0] == 21 && Pixels[pos * 3 + 1] == 151 && Pixels[pos * 3 + 2] == 6)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 51, true);
	else if (Pixels[pos * 3 + 0] == 48 && Pixels[pos * 3 + 1] == 109 && Pixels[pos * 3 + 2] == 92)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 51, true);
	else if (Pixels[pos * 3 + 0] == 156 && Pixels[pos * 3 + 1] == 140 && Pixels[pos * 3 + 2] == 247)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 51, true);
	else if (Pixels[pos * 3 + 0] == 132 && Pixels[pos * 3 + 1] == 255 && Pixels[pos * 3 + 2] == 169)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 51, false);

	else if (Pixels[pos * 3 + 0] == 136 && Pixels[pos * 3 + 1] == 21 && Pixels[pos * 3 + 2] == 24)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 34, false);
	else if (Pixels[pos * 3 + 0] == 94 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 14)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 34, true);
	else if (Pixels[pos * 3 + 0] == 50 && Pixels[pos * 3 + 1] == 102 && Pixels[pos * 3 + 2] == 107)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 34, false);
	else if (Pixels[pos * 3 + 0] == 191 && Pixels[pos * 3 + 1] == 199 && Pixels[pos * 3 + 2] == 188)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 34, true);
	else if (Pixels[pos * 3 + 0] == 157 && Pixels[pos * 3 + 1] == 230 && Pixels[pos * 3 + 2] == 226)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 34, false);


//Level 3 (Desert)
	else if (Pixels[pos * 3 + 0] == 127 && Pixels[pos * 3 + 1] == 127 && Pixels[pos * 3 + 2] == 127)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 119, true);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 111 && Pixels[pos * 3 + 2] == 132)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 119, true);
	else if (Pixels[pos * 3 + 0] == 49 && Pixels[pos * 3 + 1] == 180 && Pixels[pos * 3 + 2] == 213)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 119, true);
	else if (Pixels[pos * 3 + 0] == 185 && Pixels[pos * 3 + 1] == 208 && Pixels[pos * 3 + 2] == 53)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 119, true);
	else if (Pixels[pos * 3 + 0] == 122 && Pixels[pos * 3 + 1] == 153 && Pixels[pos * 3 + 2] == 108)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 119, true);

	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 227 && Pixels[pos * 3 + 2] == 132)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 102, false);
	else if (Pixels[pos * 3 + 0] == 149 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 22)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 102, true);
	else if (Pixels[pos * 3 + 0] == 222 && Pixels[pos * 3 + 1] == 193 && Pixels[pos * 3 + 2] == 165)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 102, true);
	else if (Pixels[pos * 3 + 0] == 240 && Pixels[pos * 3 + 1] == 168 && Pixels[pos * 3 + 2] == 147)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 102, true);
	else if (Pixels[pos * 3 + 0] == 163 && Pixels[pos * 3 + 1] == 224 && Pixels[pos * 3 + 2] == 207)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 102, true);

	else if (Pixels[pos * 3 + 0] == 213 && Pixels[pos * 3 + 1] == 192 && Pixels[pos * 3 + 2] == 174)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 85, true);
	else if (Pixels[pos * 3 + 0] == 208 && Pixels[pos * 3 + 1] == 174 && Pixels[pos * 3 + 2] == 213)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 85, true);
	else if (Pixels[pos * 3 + 0] == 219 && Pixels[pos * 3 + 1] == 136 && Pixels[pos * 3 + 2] == 251)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 85, true);
	
//Level 4 (Field)

	else if (Pixels[pos * 3 + 0] == 187 && Pixels[pos * 3 + 1] == 15 && Pixels[pos * 3 + 2] == 23)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 170, true);
	else if (Pixels[pos * 3 + 0] == 215 && Pixels[pos * 3 + 1] == 86 && Pixels[pos * 3 + 2] == 0)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 170, true);
	else if (Pixels[pos * 3 + 0] == 191 && Pixels[pos * 3 + 1] == 182 && Pixels[pos * 3 + 2] == 0)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 170, true);
	else if (Pixels[pos * 3 + 0] == 23 && Pixels[pos * 3 + 1] == 121 && Pixels[pos * 3 + 2] == 53)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 170, true);
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 118 && Pixels[pos * 3 + 2] == 168)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 170, true);
	else if (Pixels[pos * 3 + 0] == 33 && Pixels[pos * 3 + 1] == 39 && Pixels[pos * 3 + 2] == 124)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 170, true);

	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 94 && Pixels[pos * 3 + 2] == 146)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 153, true);
	else if (Pixels[pos * 3 + 0] == 174 && Pixels[pos * 3 + 1] == 135 && Pixels[pos * 3 + 2] == 0)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 153, true);
	else if (Pixels[pos * 3 + 0] == 214 && Pixels[pos * 3 + 1] == 185 && Pixels[pos * 3 + 2] == 48)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 153, true);
	else if (Pixels[pos * 3 + 0] == 104 && Pixels[pos * 3 + 1] == 134 && Pixels[pos * 3 + 2] == 15)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 153, true);
	else if (Pixels[pos * 3 + 0] == 51 && Pixels[pos * 3 + 1] == 181 && Pixels[pos * 3 + 2] == 213)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 153, true);
	else if (Pixels[pos * 3 + 0] == 168 && Pixels[pos * 3 + 1] == 188 && Pixels[pos * 3 + 2] == 215)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 153, false);

	else if (Pixels[pos * 3 + 0] == 149 && Pixels[pos * 3 + 1] == 92 && Pixels[pos * 3 + 2] == 62)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 136, true);
	else if (Pixels[pos * 3 + 0] == 88 && Pixels[pos * 3 + 1] == 90 && Pixels[pos * 3 + 2] == 122)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 136, true);
	else if (Pixels[pos * 3 + 0] == 19 && Pixels[pos * 3 + 1] == 237 && Pixels[pos * 3 + 2] == 67)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 136, false);
	else if (Pixels[pos * 3 + 0] == 209 && Pixels[pos * 3 + 1] == 168 && Pixels[pos * 3 + 2] == 147)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 136, true);

//Level 5 (Tech)

	else if (Pixels[pos * 3 + 0] == 107 && Pixels[pos * 3 + 1] == 48 && Pixels[pos * 3 + 2] == 107)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 170, true);

	else if (Pixels[pos * 3 + 0] == 133 && Pixels[pos * 3 + 1] == 113 && Pixels[pos * 3 + 2] == 202)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 153, true);

	else if (Pixels[pos * 3 + 0] == 89 && Pixels[pos * 3 + 1] == 90 && Pixels[pos * 3 + 2] == 122)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 136, true);
	else if (Pixels[pos * 3 + 0] == 18 && Pixels[pos * 3 + 1] == 237 && Pixels[pos * 3 + 2] == 67)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 136, true);
	else if (Pixels[pos * 3 + 0] == 210 && Pixels[pos * 3 + 1] == 168 && Pixels[pos * 3 + 2] == 147)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 136, true);

	else if (Pixels[pos * 3 + 0] == 137 && Pixels[pos * 3 + 1] == 14 && Pixels[pos * 3 + 2] == 177)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 119, true);
	else if (Pixels[pos * 3 + 0] == 139 && Pixels[pos * 3 + 1] == 120 && Pixels[pos * 3 + 2] == 205)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 103, 119, true);
	else if (Pixels[pos * 3 + 0] == 193 && Pixels[pos * 3 + 1] == 191 && Pixels[pos * 3 + 2] == 192)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 119, false);
	else if (Pixels[pos * 3 + 0] == 197 && Pixels[pos * 3 + 1] == 181 && Pixels[pos * 3 + 2] == 71)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 119, true);
	else if (Pixels[pos * 3 + 0] == 105 && Pixels[pos * 3 + 1] == 147 && Pixels[pos * 3 + 2] == 163)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 119, true);
	else if (Pixels[pos * 3 + 0] == 65 && Pixels[pos * 3 + 1] == 117 && Pixels[pos * 3 + 2] == 203)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 119, true);
	else if (Pixels[pos * 3 + 0] == 156 && Pixels[pos * 3 + 1] == 112 && Pixels[pos * 3 + 2] == 143)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 119, true);

	else if (Pixels[pos * 3 + 0] == 33 && Pixels[pos * 3 + 1] == 14 && Pixels[pos * 3 + 2] == 177)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 102, true);
	else if (Pixels[pos * 3 + 0] == 152 && Pixels[pos * 3 + 1] == 164 && Pixels[pos * 3 + 2] == 104)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 102, true);
	else if (Pixels[pos * 3 + 0] == 28 && Pixels[pos * 3 + 1] == 219 && Pixels[pos * 3 + 2] == 240)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 102, true);
	else if (Pixels[pos * 3 + 0] == 185 && Pixels[pos * 3 + 1] == 83 && Pixels[pos * 3 + 2] == 167)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 102, true);

	else if (Pixels[pos * 3 + 0] == 45 && Pixels[pos * 3 + 1] == 227 && Pixels[pos * 3 + 2] == 40)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 85, true);
	else if (Pixels[pos * 3 + 0] == 241 && Pixels[pos * 3 + 1] == 27 && Pixels[pos * 3 + 2] == 118)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 85, true);
	else if (Pixels[pos * 3 + 0] == 248 && Pixels[pos * 3 + 1] == 95 && Pixels[pos * 3 + 2] == 20)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 85, true);
	else if (Pixels[pos * 3 + 0] == 151 && Pixels[pos * 3 + 1] == 221 && Pixels[pos * 3 + 2] == 47)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 85, true);

	else if (Pixels[pos * 3 + 0] == 241 && Pixels[pos * 3 + 1] == 176 && Pixels[pos * 3 + 2] == 27)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 68, false);
	else if (Pixels[pos * 3 + 0] == 204 && Pixels[pos * 3 + 1] == 99 && Pixels[pos * 3 + 2] == 64)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 68, true);
	else if (Pixels[pos * 3 + 0] == 29 && Pixels[pos * 3 + 1] == 239 && Pixels[pos * 3 + 2] == 191)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 68, true);
	else if (Pixels[pos * 3 + 0] == 64 && Pixels[pos * 3 + 1] == 204 && Pixels[pos * 3 + 2] == 197)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 68, true);
	else if (Pixels[pos * 3 + 0] == 64 && Pixels[pos * 3 + 1] == 204 && Pixels[pos * 3 + 2] == 197)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 68, true);

//Level 6 (Castle)

	else if (Pixels[pos * 3 + 0] == 19 && Pixels[pos * 3 + 1] == 113 && Pixels[pos * 3 + 2] == 108)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 68, true);
	else if (Pixels[pos * 3 + 0] == 36 && Pixels[pos * 3 + 1] == 73 && Pixels[pos * 3 + 2] == 96)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 68, true);

	else if (Pixels[pos * 3 + 0] == 75 && Pixels[pos * 3 + 1] == 192 && Pixels[pos * 3 + 2] == 122)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 51, true);
	else if (Pixels[pos * 3 + 0] == 149 && Pixels[pos * 3 + 1] == 100 && Pixels[pos * 3 + 2] == 168)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 51, true);
	else if (Pixels[pos * 3 + 0] == 60 && Pixels[pos * 3 + 1] == 160 && Pixels[pos * 3 + 2] == 208)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 51, true);
	else if (Pixels[pos * 3 + 0] == 205 && Pixels[pos * 3 + 1] == 63 && Pixels[pos * 3 + 2] == 84)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 51, false);
	else if (Pixels[pos * 3 + 0] == 158 && Pixels[pos * 3 + 1] == 13 && Pixels[pos * 3 + 2] == 255)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 51, false);
	else if (Pixels[pos * 3 + 0] == 14 && Pixels[pos * 3 + 1] == 176 && Pixels[pos * 3 + 2] == 254)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 51, false);
	else if (Pixels[pos * 3 + 0] == 225 && Pixels[pos * 3 + 1] == 43 && Pixels[pos * 3 + 2] == 79)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 51, true);

	if (Pixels[pos * 3 + 0] == 34 && Pixels[pos * 3 + 1] == 234 && Pixels[pos * 3 + 2] == 209)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 34, true);
	else if (Pixels[pos * 3 + 0] == 224 && Pixels[pos * 3 + 1] == 152 && Pixels[pos * 3 + 2] == 44)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 34, true);
	else if (Pixels[pos * 3 + 0] == 186 && Pixels[pos * 3 + 1] == 203 && Pixels[pos * 3 + 2] == 65)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 34, true);
	else if (Pixels[pos * 3 + 0] == 199 && Pixels[pos * 3 + 1] == 251 && Pixels[pos * 3 + 2] == 17)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 34, false);
	else if (Pixels[pos * 3 + 0] == 18 && Pixels[pos * 3 + 1] == 250 && Pixels[pos * 3 + 2] == 181)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 34, false);
	else if (Pixels[pos * 3 + 0] == 252 && Pixels[pos * 3 + 1] == 134 && Pixels[pos * 3 + 2] == 16)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 34, false);
	else if (Pixels[pos * 3 + 0] == 205 && Pixels[pos * 3 + 1] == 63 && Pixels[pos * 3 + 2] == 137)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 34, true);

	else if (Pixels[pos * 3 + 0] == 124 && Pixels[pos * 3 + 1] == 34 && Pixels[pos * 3 + 2] == 234)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 17, true);
	else if (Pixels[pos * 3 + 0] == 155 && Pixels[pos * 3 + 1] == 120 && Pixels[pos * 3 + 2] == 5)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 17, true);
	else if (Pixels[pos * 3 + 0] == 157 && Pixels[pos * 3 + 1] == 77 && Pixels[pos * 3 + 2] == 191)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 17, true);
	else if (Pixels[pos * 3 + 0] == 64 && Pixels[pos * 3 + 1] == 117 && Pixels[pos * 3 + 2] == 204)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 17, true);
	else if (Pixels[pos * 3 + 0] == 48 && Pixels[pos * 3 + 1] == 220 && Pixels[pos * 3 + 2] == 211)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 17, true);
	else if (Pixels[pos * 3 + 0] == 145 && Pixels[pos * 3 + 1] == 204 && Pixels[pos * 3 + 2] == 64)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 17, true);
	else if (Pixels[pos * 3 + 0] == 176 && Pixels[pos * 3 + 1] == 151 && Pixels[pos * 3 + 2] == 91)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 17, true);
	else if (Pixels[pos * 3 + 0] == 108 && Pixels[pos * 3 + 1] == 142 && Pixels[pos * 3 + 2] == 159)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 17, true);
	else if (Pixels[pos * 3 + 0] == 164 && Pixels[pos * 3 + 1] == 104 && Pixels[pos * 3 + 2] == 149)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 135, 17, false);
	else if (Pixels[pos * 3 + 0] == 196 && Pixels[pos * 3 + 1] == 124 && Pixels[pos * 3 + 2] == 72)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 152, 17, false);
	else if (Pixels[pos * 3 + 0] == 70 && Pixels[pos * 3 + 1] == 143 && Pixels[pos * 3 + 2] == 198)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 169, 17, false);
	else if (Pixels[pos * 3 + 0] == 191 && Pixels[pos * 3 + 1] == 77 && Pixels[pos * 3 + 2] == 191)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 17, false);

	else if (Pixels[pos * 3 + 0] == 153 && Pixels[pos * 3 + 1] == 115 && Pixels[pos * 3 + 2] == 132)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 0, true);
	else if (Pixels[pos * 3 + 0] == 112 && Pixels[pos * 3 + 1] == 61 && Pixels[pos * 3 + 2] == 207)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 16, 0, true);
	else if (Pixels[pos * 3 + 0] == 53 && Pixels[pos * 3 + 1] == 38 && Pixels[pos * 3 + 2] == 230)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 33, 0, true);
	else if (Pixels[pos * 3 + 0] == 163 && Pixels[pos * 3 + 1] == 215 && Pixels[pos * 3 + 2] == 53)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 0, true);
	else if (Pixels[pos * 3 + 0] == 75 && Pixels[pos * 3 + 1] == 192 && Pixels[pos * 3 + 2] == 111)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 0, true);
	else if (Pixels[pos * 3 + 0] == 235 && Pixels[pos * 3 + 1] == 84 && Pixels[pos * 3 + 2] == 33)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 84, 0, true);
	else if (Pixels[pos * 3 + 0] == 232 && Pixels[pos * 3 + 1] == 217 && Pixels[pos * 3 + 2] == 36)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 101, 0, true);
	else if (Pixels[pos * 3 + 0] == 77 && Pixels[pos * 3 + 1] == 191 && Pixels[pos * 3 + 2] == 159)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 0, true);

//Tutorial Level
	
	else if (Pixels[pos * 3 + 0] == 164 && Pixels[pos * 3 + 1] == 99 && Pixels[pos * 3 + 2] == 60)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 170, true);
	else if (Pixels[pos * 3 + 0] == 103 && Pixels[pos * 3 + 1] == 211 && Pixels[pos * 3 + 2] == 119)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 220, 170, true);
	else if (Pixels[pos * 3 + 0] == 143 && Pixels[pos * 3 + 1] == 135 && Pixels[pos * 3 + 2] == 180)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 170, true);
	else if (Pixels[pos * 3 + 0] == 175 && Pixels[pos * 3 + 1] == 65 && Pixels[pos * 3 + 2] == 148)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 254, 170, true);
	else if (Pixels[pos * 3 + 0] == 146 && Pixels[pos * 3 + 1] == 199 && Pixels[pos * 3 + 2] == 209)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 271, 170, true);
	else if (Pixels[pos * 3 + 0] == 123 && Pixels[pos * 3 + 1] == 132 && Pixels[pos * 3 + 2] == 232)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 288, 170, true);
	else if (Pixels[pos * 3 + 0] == 174 && Pixels[pos * 3 + 1] == 194 && Pixels[pos * 3 + 2] == 160)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 170, true);

	else if (Pixels[pos * 3 + 0] == 102 && Pixels[pos * 3 + 1] == 192 && Pixels[pos * 3 + 2] == 48)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 153, true);
	else if (Pixels[pos * 3 + 0] == 194 && Pixels[pos * 3 + 1] == 135 && Pixels[pos * 3 + 2] == 46)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 153, true);
	else if (Pixels[pos * 3 + 0] == 92 && Pixels[pos * 3 + 1] == 148 && Pixels[pos * 3 + 2] == 135)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 153, true);
	else if (Pixels[pos * 3 + 0] == 192 && Pixels[pos * 3 + 1] == 48 && Pixels[pos * 3 + 2] == 51)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 254, 153, true);
	else if (Pixels[pos * 3 + 0] == 226 && Pixels[pos * 3 + 1] == 14 && Pixels[pos * 3 + 2] == 205)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 271, 153, true);
	else if (Pixels[pos * 3 + 0] == 182 && Pixels[pos * 3 + 1] == 58 && Pixels[pos * 3 + 2] == 136)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 288, 153, true);
	else if (Pixels[pos * 3 + 0] == 233 && Pixels[pos * 3 + 1] == 139 && Pixels[pos * 3 + 2] == 122)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 153, true);

	else if (Pixels[pos * 3 + 0] == 230 && Pixels[pos * 3 + 1] == 231 && Pixels[pos * 3 + 2] == 124)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 220, 136, false);
	else if (Pixels[pos * 3 + 0] == 164 && Pixels[pos * 3 + 1] == 216 && Pixels[pos * 3 + 2] == 139)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 136, false);
	else if (Pixels[pos * 3 + 0] == 23 && Pixels[pos * 3 + 1] == 179 && Pixels[pos * 3 + 2] == 155)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 136, false);
	else if (Pixels[pos * 3 + 0] == 33 && Pixels[pos * 3 + 1] == 124 && Pixels[pos * 3 + 2] == 169)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 254, 136, true);
	else if (Pixels[pos * 3 + 0] == 186 && Pixels[pos * 3 + 1] == 16 && Pixels[pos * 3 + 2] == 63)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 271, 136, true);
	else if (Pixels[pos * 3 + 0] == 12 && Pixels[pos * 3 + 1] == 12 && Pixels[pos * 3 + 2] == 190)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 288, 136, true);
	else if (Pixels[pos * 3 + 0] == 198 && Pixels[pos * 3 + 1] == 120 && Pixels[pos * 3 + 2] == 4)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 136, true);

	else if (Pixels[pos * 3 + 0] == 16 && Pixels[pos * 3 + 1] == 95 && Pixels[pos * 3 + 2] == 22)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 119, true);
	else if (Pixels[pos * 3 + 0] == 217 && Pixels[pos * 3 + 1] == 227 && Pixels[pos * 3 + 2] == 196)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 220, 119, true);
	else if (Pixels[pos * 3 + 0] == 24 && Pixels[pos * 3 + 1] == 86 && Pixels[pos * 3 + 2] == 86)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 119, true);
	else if (Pixels[pos * 3 + 0] == 109 && Pixels[pos * 3 + 1] == 1 && Pixels[pos * 3 + 2] == 99)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 254, 119, true);
	else if (Pixels[pos * 3 + 0] == 185 && Pixels[pos * 3 + 1] == 221 && Pixels[pos * 3 + 2] == 238)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 271, 119, true);
	else if (Pixels[pos * 3 + 0] == 157 && Pixels[pos * 3 + 1] == 143 && Pixels[pos * 3 + 2] == 45)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 288, 119, false);
	else if (Pixels[pos * 3 + 0] == 49 && Pixels[pos * 3 + 1] == 170 && Pixels[pos * 3 + 2] == 32)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 305, 119, false);

	else if (Pixels[pos * 3 + 0] == 99 && Pixels[pos * 3 + 1] == 171 && Pixels[pos * 3 + 2] == 97)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 203, 102, true);
	else if (Pixels[pos * 3 + 0] == 241 && Pixels[pos * 3 + 1] == 182 && Pixels[pos * 3 + 2] == 216)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 220, 102, true);
	else if (Pixels[pos * 3 + 0] == 136 && Pixels[pos * 3 + 1] == 95 && Pixels[pos * 3 + 2] == 173)
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 102, true);
	
//Player/Enemy Spawns

//Level 0 (Hub)

	if (Pixels[pos * 3 + 0] == 136 && Pixels[pos * 3 + 1] == 136 && Pixels[pos * 3 + 2] == 136)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 136, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 133 && Pixels[pos * 3 + 1] == 133 && Pixels[pos * 3 + 2] == 133)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 154, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 100 && Pixels[pos * 3 + 1] == 100 && Pixels[pos * 3 + 2] == 100)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 154, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}

//Level 1 (Lava)
	if (Pixels[pos * 3 + 0] == 137 && Pixels[pos * 3 + 1] == 137 && Pixels[pos * 3 + 2] == 137)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 153, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 138 && Pixels[pos * 3 + 1] == 138 && Pixels[pos * 3 + 2] == 138)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 153, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
		else if (Pixels[pos * 3 + 0] == 101 && Pixels[pos * 3 + 1] == 101 && Pixels[pos * 3 + 2] == 101)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 50, 153, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}

//Level 2 (Autumn)
	if (Pixels[pos * 3 + 0] == 139 && Pixels[pos * 3 + 1] == 139 && Pixels[pos * 3 + 2] == 139)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 85, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 140 && Pixels[pos * 3 + 1] == 140 && Pixels[pos * 3 + 2] == 140)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 85, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
		else if (Pixels[pos * 3 + 0] == 102 && Pixels[pos * 3 + 1] == 102 && Pixels[pos * 3 + 2] == 102)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 67, 85, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}

//Level 3 (Desert)
	if (Pixels[pos * 3 + 0] == 141 && Pixels[pos * 3 + 1] == 141 && Pixels[pos * 3 + 2] == 141)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 102, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 142 && Pixels[pos * 3 + 1] == 142 && Pixels[pos * 3 + 2] == 142)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 102, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
		else if (Pixels[pos * 3 + 0] == 103 && Pixels[pos * 3 + 1] == 103 && Pixels[pos * 3 + 2] == 103)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, -1, 102, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}

//Level 4 (Field)

	if (Pixels[pos * 3 + 0] == 143 && Pixels[pos * 3 + 1] == 143 && Pixels[pos * 3 + 2] == 143)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 136, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 144 && Pixels[pos * 3 + 1] == 144 && Pixels[pos * 3 + 2] == 144)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 136, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
		else if (Pixels[pos * 3 + 0] == 104 && Pixels[pos * 3 + 1] == 104 && Pixels[pos * 3 + 2] == 104)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 136, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}

//Level 5 (Tech)

	if (Pixels[pos * 3 + 0] == 145 && Pixels[pos * 3 + 1] == 145 && Pixels[pos * 3 + 2] == 145)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 119, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 146 && Pixels[pos * 3 + 1] == 146 && Pixels[pos * 3 + 2] == 146)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 119, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
		else if (Pixels[pos * 3 + 0] == 105 && Pixels[pos * 3 + 1] == 105 && Pixels[pos * 3 + 2] == 105)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 118, 119, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}

//Level 6 (Castle)

	if (Pixels[pos * 3 + 0] == 147 && Pixels[pos * 3 + 1] == 147 && Pixels[pos * 3 + 2] == 147)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 17, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 148 && Pixels[pos * 3 + 1] == 148 && Pixels[pos * 3 + 2] == 148)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 17, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
		else if (Pixels[pos * 3 + 0] == 106 && Pixels[pos * 3 + 1] == 106 && Pixels[pos * 3 + 2] == 106)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 186, 17, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}

//Level 7 (Tutorial)

	if (Pixels[pos * 3 + 0] == 135 && Pixels[pos * 3 + 1] == 135 && Pixels[pos * 3 + 2] == 135)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 136, false);
		entityManager->CreateEntity(PLAYER, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
	else if (Pixels[pos * 3 + 0] == 134 && Pixels[pos * 3 + 1] == 134 && Pixels[pos * 3 + 2] == 134)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 136, false);
		entityManager->CreateEntity(ENEMY, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
		else if (Pixels[pos * 3 + 0] == 107 && Pixels[pos * 3 + 1] == 107 && Pixels[pos * 3 + 2] == 107)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 136, false);
		entityManager->CreateEntity(ELITE, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}
			else if (Pixels[pos * 3 + 0] == 200 && Pixels[pos * 3 + 1] == 200 && Pixels[pos * 3 + 2] == 200)
	{	
		tileManager->CreateTile(STATIC, x * 16 - 0.0f * x, (mapData.h - y) * 16, 16, 16, 237, 136, false);
		entityManager->CreateEntity(BOSS, x * 16 - 0.0f * x, (mapData.h - y) * 16);
	}