	//Portal Locations
	if (Pixels[pos * 3 + 0] == 1 && Pixels[pos * 3 + 1] == 1 && Pixels[pos * 3 + 2] == 1)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 17.f, 0.f, true, 1);
	else if (Pixels[pos * 3 + 0] == 2 && Pixels[pos * 3 + 1] == 2 && Pixels[pos * 3 + 2] == 2)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 17.f, 0.f, true, 2);
	else if (Pixels[pos * 3 + 0] == 3 && Pixels[pos * 3 + 1] == 3 && Pixels[pos * 3 + 2] == 3)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 17.f, 0.f, true, 3);
	else if (Pixels[pos * 3 + 0] == 4 && Pixels[pos * 3 + 1] == 4 && Pixels[pos * 3 + 2] == 4)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 17.f, 0.f, true, 4);
	else if (Pixels[pos * 3 + 0] == 5 && Pixels[pos * 3 + 1] == 5 && Pixels[pos * 3 + 2] == 5)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 17.f, 0.f, true, 5);
	else if (Pixels[pos * 3 + 0] == 6 && Pixels[pos * 3 + 1] == 6 && Pixels[pos * 3 + 2] == 6)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 17.f, 0.f, true, 6);
	//Wall/floor tiles in test room
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 0)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 51.f, 17.f, true);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 255 && Pixels[pos * 3 + 2] == 255)
		tileManager->CreateTile(STATIC, x * 15.f, (mapData.h - y) * 15.f, 15.f, 15.f, 34.f, 17.f, false);
	
	//Player location
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 174 && Pixels[pos * 3 + 2] == 201)
		entityManager->CreateEntity(PLAYER, x * 15.f, (mapData.h - y) * 15.f);

//The below is for the actual map, the above is for testing
	else if (Pixels[pos * 3 + 0] == 237 && Pixels[pos * 3 + 1] == 28 && Pixels[pos * 3 + 2] == 36)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 0.f, 17.f, true);

	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 127 && Pixels[pos * 3 + 2] == 39)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 0.f, 0.f, true);

	else if (Pixels[pos * 3 + 0] == 34 && Pixels[pos * 3 + 1] == 177 && Pixels[pos * 3 + 2] == 76)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 17.f, 17.f, false);
		
	else if (Pixels[pos * 3 + 0] == 185 && Pixels[pos * 3 + 1] == 122 && Pixels[pos * 3 + 2] == 87)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 17.f, 0.f, false);

	else if (Pixels[pos * 3 + 0] == 195 && Pixels[pos * 3 + 1] == 195 && Pixels[pos * 3 + 2] == 195)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 34.f, 0.f, false);

	else if (Pixels[pos * 3 + 0] == 181 && Pixels[pos * 3 + 1] == 230 && Pixels[pos * 3 + 2] == 29)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 34.f, 17.f, false);

	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 242 && Pixels[pos * 3 + 2] == 0)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 51.f, 17.f, false);

	else if (Pixels[pos * 3 + 0] == 127 && Pixels[pos * 3 + 1] == 127 && Pixels[pos * 3 + 2] == 127)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 51.f, 0.f, false);

	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 162 && Pixels[pos * 3 + 2] == 232)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 68.f, 17.f, false);

	else if (Pixels[pos * 3 + 0] == 163 && Pixels[pos * 3 + 1] == 73 && Pixels[pos * 3 + 2] == 164)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 68.f, 0.f, false);

	else if (Pixels[pos * 3 + 0] == 153 && Pixels[pos * 3 + 1] == 217 && Pixels[pos * 3 + 2] == 234)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 85.f, 17.f, false);

	else if (Pixels[pos * 3 + 0] == 64 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 128)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 85.f, 0.f, false);

	else if (Pixels[pos * 3 + 0] == 63 && Pixels[pos * 3 + 1] == 72 && Pixels[pos * 3 + 2] == 204)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 119.f, 17.f, false);

	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 128)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 119.f, 0.f, false);

	else if (Pixels[pos * 3 + 0] == 112 && Pixels[pos * 3 + 1] == 146 && Pixels[pos * 3 + 2] == 190)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 102.f, 17.f, false);
 
	else if (Pixels[pos * 3 + 0] == 128 && Pixels[pos * 3 + 1] == 0 && Pixels[pos * 3 + 2] == 255)
		tileManager->CreateTile(STATIC, x * 15.f, y * 15.f, 15.f, 15.f, 102.f, 0.f, false);
//Level 1 (Volcano)
/*R1*/	else if (Pixels[pos * 3 + 0] == 237 && Pixels[pos * 3 + 1] == 28 && Pixels[pos * 3 + 2] == 36)//Small Rock
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 0, 171, true);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 127 && Pixels[pos * 3 + 2] == 39)//Top Tall Rock
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 17, 171, true);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 242 && Pixels[pos * 3 + 2] == 0)//Top Left Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 34, 171, true);
	else if (Pixels[pos * 3 + 0] == 34 && Pixels[pos * 3 + 1] == 177 && Pixels[pos * 3 + 2] == 76)//Top Middle Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 51, 171, false);
	else if (Pixels[pos * 3 + 0] == 0 && Pixels[pos * 3 + 1] == 162 && Pixels[pos * 3 + 2] == 232)//Top Right Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 68, 171, true);

/*R2*/	else if (Pixels[pos * 3 + 0] == 63 && Pixels[pos * 3 + 1] == 72 && Pixels[pos * 3 + 2] == 204)//Lava
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 0, 154, true);
	else if (Pixels[pos * 3 + 0] == 163 && Pixels[pos * 3 + 1] == 73 && Pixels[pos * 3 + 2] == 164)//Bottom Tall Rock
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 17, 154, true);
	else if (Pixels[pos * 3 + 0] == 200 && Pixels[pos * 3 + 1] == 191 && Pixels[pos * 3 + 2] == 231)//Middle Left Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 34, 154, true);
	else if (Pixels[pos * 3 + 0] == 112 && Pixels[pos * 3 + 1] == 146 && Pixels[pos * 3 + 2] == 190)//Middle Middle Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 51, 154, false);
	else if (Pixels[pos * 3 + 0] == 153 && Pixels[pos * 3 + 1] == 217 && Pixels[pos * 3 + 2] == 234)//Middle Right Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 68, 154, true);

/*R3*/	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 174 && Pixels[pos * 3 + 2] == 201)//Horiz Lava Bridge
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 0, 137, true);
	else if (Pixels[pos * 3 + 0] == 255 && Pixels[pos * 3 + 1] == 201 && Pixels[pos * 3 + 2] == 14)//Vert Lava Bridge
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 17, 137, true);
	else if (Pixels[pos * 3 + 0] == 239 && Pixels[pos * 3 + 1] == 228 && Pixels[pos * 3 + 2] == 176)//Bot Left Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 34, 137, true);
	else if (Pixels[pos * 3 + 0] == 185 && Pixels[pos * 3 + 1] == 122 && Pixels[pos * 3 + 2] == 87)//Bot Middle Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 51, 137, false);
	else if (Pixels[pos * 3 + 0] == 195 && Pixels[pos * 3 + 1] == 195 && Pixels[pos * 3 + 2] == 195)//Bot Right Platform
		tileManager->CreateTile(STATIC, x * 15, (mapData.h - y) * 15, 15, 15, 68, 137, true);